# This config builds echoprint-codegen for a Linux distro and uploads it
# into GCS. This is NOT a good solution, as the binary will probably break
# down if libraries in the OS change even by an inch.
#
# Ideally, this should be repackaged as a microservice and built as a regular
# container image deployed as a sidecar, and the main Playax app should access 
# this as an API instead of expecting to have the binary available locally.
#
# Other options would include building an APT or AppImage package, but clearly a 
# microservice would provide better isolation for dependencies.
options:
  dynamic_substitutions: true

substitutions:
  _DISTRO: 'debian'
  _RELEASE: 'buster'
  _BINARIES_BUCKET: 'gs://files.playax.com/binaries'
  _ARTIFACT_URL: '${_BINARIES_BUCKET}/echoprint-codegen/${_DISTRO}-${_RELEASE}/echoprint-codegen'

steps:
  - name: '${_DISTRO}:${_RELEASE}'
    args: ['bash', '-c', './build-${_DISTRO}-${_RELEASE}.sh']

  # We unfortunately cannot use the cloudbuild artifact copy because
  # we need to set the ACLs.
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', './echoprint-codegen', '${_ARTIFACT_URL}']

  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['acl', 'ch', '-u', 'AllUsers:r', '${_ARTIFACT_URL}']